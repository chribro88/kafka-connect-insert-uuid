<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.151" tests="34" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="18"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/workspace/kafka-connect-insert-uuid/target/test-classes:/workspace/kafka-connect-insert-uuid/target/classes:/home/vsc/.m2/repository/org/apache/kafka/connect-api/3.5.1/connect-api-3.5.1.jar:/home/vsc/.m2/repository/org/apache/kafka/kafka-clients/3.5.1/kafka-clients-3.5.1.jar:/home/vsc/.m2/repository/com/github/luben/zstd-jni/1.5.5-1/zstd-jni-1.5.5-1.jar:/home/vsc/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/home/vsc/.m2/repository/org/xerial/snappy/snappy-java/1.1.10.1/snappy-java-1.1.10.1.jar:/home/vsc/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/vsc/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.1.1/javax.ws.rs-api-2.1.1.jar:/home/vsc/.m2/repository/org/apache/kafka/connect-transforms/3.5.1/connect-transforms-3.5.1.jar:/home/vsc/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/vsc/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/vsc/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/home/vsc/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/vsc/.m2/repository/org/junit/platform/junit-platform-commons/1.10.0/junit-platform-commons-1.10.0.jar:/home/vsc/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/vsc/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.0/junit-jupiter-params-5.10.0.jar:/home/vsc/.m2/repository/org/mongodb/bson/4.10.2/bson-4.10.2.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="18"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/home/vsc/.sdkman/candidates/java/18.0.2-amzn/lib"/>
    <property name="sun.java.command" value="/workspace/kafka-connect-insert-uuid/target/surefire/surefirebooter-20230829002523142_3.jar /workspace/kafka-connect-insert-uuid/target/surefire 2023-08-29T00-25-22_751-jvmRun1 surefire-20230829002523142_1tmp surefire_0-20230829002523142_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/workspace/kafka-connect-insert-uuid/target/test-classes:/workspace/kafka-connect-insert-uuid/target/classes:/home/vsc/.m2/repository/org/apache/kafka/connect-api/3.5.1/connect-api-3.5.1.jar:/home/vsc/.m2/repository/org/apache/kafka/kafka-clients/3.5.1/kafka-clients-3.5.1.jar:/home/vsc/.m2/repository/com/github/luben/zstd-jni/1.5.5-1/zstd-jni-1.5.5-1.jar:/home/vsc/.m2/repository/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/home/vsc/.m2/repository/org/xerial/snappy/snappy-java/1.1.10.1/snappy-java-1.1.10.1.jar:/home/vsc/.m2/repository/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/vsc/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.1.1/javax.ws.rs-api-2.1.1.jar:/home/vsc/.m2/repository/org/apache/kafka/connect-transforms/3.5.1/connect-transforms-3.5.1.jar:/home/vsc/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/vsc/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/vsc/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/home/vsc/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/vsc/.m2/repository/org/junit/platform/junit-platform-commons/1.10.0/junit-platform-commons-1.10.0.jar:/home/vsc/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/vsc/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.0/junit-jupiter-params-5.10.0.jar:/home/vsc/.m2/repository/org/mongodb/bson/4.10.2/bson-4.10.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/vsc"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-07-19"/>
    <property name="java.home" value="/home/vsc/.sdkman/candidates/java/18.0.2-amzn"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/workspace/kafka-connect-insert-uuid"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/workspace/kafka-connect-insert-uuid/target/surefire/surefirebooter-20230829002523142_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="18.0.2+9-FR"/>
    <property name="user.name" value="vsc"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.2.0-26-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-18.0.2.9.1"/>
    <property name="localRepository" value="/home/vsc/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-18/issues/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="18.0.2"/>
    <property name="user.dir" value="/workspace/kafka-connect-insert-uuid"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="18.0.2+9-FR"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="62.0"/>
  </properties>
  <testcase name="invalidConfigEmptyHeadersAndFieldsConfig(boolean)[1]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.036">
    <system-err><![CDATA[SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
]]></system-err>
  </testcase>
  <testcase name="invalidConfigEmptyHeadersAndFieldsConfig(boolean)[2]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="invalidConfigExtraHeaderConfig(boolean)[1]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.003"/>
  <testcase name="invalidConfigExtraHeaderConfig(boolean)[2]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="invalidConfigExtraFieldConfig(boolean)[1]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="invalidConfigExtraFieldConfig(boolean)[2]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[1]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.025"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[2]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[3]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[4]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[5]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.002"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[6]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[7]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[8]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[9]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[10]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[11]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[12]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[13]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[14]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[15]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemaless(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[16]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.002"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[1]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.002"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[2]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[3]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[4]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[5]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[6]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[7]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[8]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[9]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[10]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[11]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
  <testcase name="schemalessWithNestedData(String, boolean, RecordBuilder, List, List, Operation, RecordBuilder)[12]" classname="com.github.chribro88.kafka.connect.smt.HeaderFromTest" time="0.001"/>
</testsuite>